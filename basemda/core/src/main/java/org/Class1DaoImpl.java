// Generated by: hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package org;

/**
 * @see Class1
 */
public class Class1DaoImpl
    extends Class1DaoBase
{
    /**
     * {@inheritDoc}
     */
    public void toClass1VO(
        Class1 source,
        Class1VO target)
    {
        // TODO verify behavior of toClass1VO
        super.toClass1VO(source, target);
    }

    /**
     * {@inheritDoc}
     */
    public Class1VO toClass1VO(final Class1 entity)
    {
        // TODO verify behavior of toClass1VO
        return super.toClass1VO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Class1 loadClass1FromClass1VO(Class1VO class1VO)
    {
        // TODO implement loadClass1FromClass1VO
        throw new UnsupportedOperationException("org.loadClass1FromClass1VO(Class1VO) not yet implemented.");

        /* A typical implementation looks like this:
        Class1 class1 = this.get(class1VO.getId());
        if (class1 == null)
        {
            class1 = Class1.Factory.newInstance();
        }
        return class1;
        */
    }

    /**
     * {@inheritDoc}
     */
    public Class1 class1VOToEntity(Class1VO class1VO)
    {
        // TODO verify behavior of class1VOToEntity
        Class1 entity = this.loadClass1FromClass1VO(class1VO);
        this.class1VOToEntity(class1VO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void class1VOToEntity(
        Class1VO source,
        Class1 target,
        boolean copyIfNull)
    {
        // TODO verify behavior of class1VOToEntity
        super.class1VOToEntity(source, target, copyIfNull);
    }
}